generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  email    String @unique()
  password String

  profile Profile?
}

model Profile {
  id       Int     @id @default(autoincrement())
  nickname String
  avatar   String? @unique
  balance  Float   @default(0)
  rating   Float   @default(0)

  userId       Int           @unique
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  publications Publication[]
  likes        Like[]
}

model Code {
  id        Int      @id @default(autoincrement())
  expiredAt DateTime

  email       String  @unique
  code        Int
  isConfirmed Boolean @default(false)
}

model Publication {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiredAt DateTime

  from           String
  to             String
  price          Float   @default(0)
  criteria       String?
  additionalInfo String?

  authorId Int
  author   Profile @relation(fields: [authorId], references: [id], onDelete: Cascade)
  likes    Like[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  authorId      Int
  author        Profile     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  publicationId Int
  publication   Publication @relation(fields: [publicationId], references: [id], onDelete: Cascade)
}
